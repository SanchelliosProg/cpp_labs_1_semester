/*************************************************************
	Практическое занятие №5. Структуры
//динамический массив структур
//поиск
//сортировка
//сохранение в файле
//чтение из файла
*************************************************************/

#include "BooksCollection.h" 
#include "support.h" 
#include <cstdio>
#include <iostream>
#define	  stop __asm nop	

void main()
{
	//Используйте структуру BOOK, созданную в предыдущей работе.
	//Для этого достаточно переписать и подключить к проекту файлы
	//book.h и book.cpp
	

	//Упрощения:
	//1. пусть автор и заглавие книги состоят из одного слова
	//2. все строки можно задавать латинскими буквами. Если хочется
	//   не только выводить, но и вводить русские символы, следует
	//   а) пользоваться расширенными функциями ввода/вывода - wprintf(), wscanf()
	//   б) хранить строки как расширенные - wchar_t
	//   в) установить кодировку - setlocale(LC_CTYPE, ".866");


	//Задание 1. Создаем «картотеку».
	//«Картотека» - это массив структур => нужно такой массив создать.
	//Замечание: размер массива придется увеличиватьпо мере добавления книг =>
	//каким должен быть такой массив???
	

	//Пользователь должен иметь возможность по своему желанию выполнять
	//разные действия с картотекой => нужно такую возможность ему
	//предоставить: это может выглядеть как вывод "меню" (перечень
	//возможных действий и соответствующих реакций пользователя), например:
	//Распечатать содержимое картотеки (1)
	//Ввести новую книгу (2)
	//Удалить существующую(ие) (3)
	//Записать текущее содержимое картотеки в файл (4)
	//Считать из файла содержимое в картотеку (5)
	//...
	//Выход из программы (...)
	//Реализуйте посредством функций разные возможности работы с картотекой
	//Подсказка: для файлового ввода/вывода используйте функции fprintf и fscanf
	//(заголовочный файл <cstdio>

	BooksCollection catalogue;
	initBooksCollection(catalogue);
	help();
	bool run = true;
	while (run){
		char choise = 0;
		printUserInvitation();
		scanf("%c", &choise);
		fflush(stdin);
		std::cout << std::endl;
		switch (choise) {
		case 'h':
			help();
			break;
		case 'q':
			run = false;
			break;
		case 'b':
			addDefaultBookshelf(catalogue);
			break;
		case 'p':
			printTheCollection(catalogue);
			break;
		case 'a':
			addNewBook(catalogue);
			break;
		case 'd':
			deleteBook(catalogue);
			break;
		case 's':
			saveToFile(catalogue);
			break;
		case 'l':
			loadBookFromFile(catalogue);
			break;
		case 'x':
			flushFile();
			break;
		case 'z':
			flushCollection(catalogue);
			break;
		case 't':
			//****************************************************************
			//Задание 2. Предоставьте пользователю возможность выводить перечень книг
			//в определенном порядке => напишите функцию (функции) сортировки массива
			//по любому из полей структуры.
			//Замечание: признак - "по какому полю сортируем" можно ввести с помощью
			//перечисления.
			sortChoise(catalogue);
			break;
		default:
			std::cout << "ERROR: Unknown operation! Check \'help\' by pressing 'h'." << std::endl;
			break;
		}
	}
	flushTheStruct(catalogue);
	system("pause");
}